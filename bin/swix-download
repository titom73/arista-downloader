#!/usr/bin/python

import sys
import os
import argparse
import eos_downloader.swix
from eos_downloader.data import DATA_MAPPING
from loguru import logger
from rich.console import Console

ARISTA_TOKEN = os.getenv('ARISTA_TOKEN', '')


def read_cli():
    parser = argparse.ArgumentParser(description='EOS downloader script.')
    parser.add_argument('--token', required=False,
                        default=ARISTA_TOKEN,
                        help='arista.com user API key - can use ENV:ARISTA_TOKEN')

    parser.add_argument('--package', required=False,
                        default='terminAttr', help='EOS package')

    parser.add_argument('--version', required=True,
                        default='', help='EOS version to download from website')

    parser.add_argument('--destination', required=False,
                        default=str(os.getcwd()),
                        help='Path where to save EOS package downloaded')

    parser.add_argument('--verbose', required=False,
                        default='info', help='Script verbosity')

    parser.add_argument('--log', required=False, action='store_true',
                        help="Option to activate logging to eos-downloader.log file")

    return parser.parse_args()


if __name__ == '__main__':

    cli_options = read_cli()

    console = Console()

    logger.remove()
    if cli_options.log:
        logger.add("eos-downloader.log", rotation="10 MB", level=str(cli_options.verbose).upper())

    console.print("ü™ê [bold blue]eos-downloader[/bold blue] is starting...", )
    console.print(f'    - Image Type: {cli_options.package}')
    console.print(f'    - Version: {cli_options.version}')

    for node_name,node in DATA_MAPPING['extensions'].items():
        if node['alias'] == cli_options.package:
            console.print(node_name)
            my_download = eos_downloader.swix.SWIXDownloader(
                image=node_name,
                software='extensions',
                version=cli_options.version,
                token=cli_options.token,
                hash_method='md5sum')

            my_download.authenticate()
            my_download.download_local(file_path=cli_options.destination, checksum=True)

    console.print('‚úÖ  processing done !')
    sys.exit(0)
