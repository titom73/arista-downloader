---
name: "Pytest Validation"

on:
  pull_request:

jobs:
  pytest:
    name: Run Pytest Validation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          echo "PY_COLORS=1" >> $GITHUB_ENV
          echo "ANSIBLE_FORCE_COLOR=1" >> $GITHUB_ENV
          pip install pytest pytest-cov pytest-html pytest-dependency pytest-metadata
          pip install -r requirements.txt
      - name: Run Pytest
        run: |
          echo "PY_COLORS=1" >> $GITHUB_ENV
          echo "ANSIBLE_FORCE_COLOR=1" >> $GITHUB_ENV
          python setup.py develop
          make test
        env: # Or as an environment variable
          ARISTA_TOKEN: ${{ secrets.ARISTA_TOKEN }}

  docker_build:
    name: Docker Image Build (no push)
    runs-on: ubuntu-latest
    needs: [pytest]
    strategy:
        fail-fast: true
        matrix:
          dockerfile:
            - Dockerfile
            - Dockerfile.docker
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta for TAG
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKER_IMAGE }}
          tags: |
            type=raw,value=dev

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}